# cf. https://www.wikidata.org/wiki/Q21510852 ... for the description of Commons link constraint.
# We show here an example for property https://www.wikidata.org/wiki/Property:P14
# This constraint is again NOT directly expressible in SPARQL, as it needs the value of the qualifier https://www.wikidata.org/wiki/Property:P2307
# (in this case "File") to be appended to the Commons prefix URL for checking the constraint. However, when we append the respective namespace URL
# i.e. "https://commons.wikimedia.org/wiki/File:" to check the constraint, we don't get correct results, because it seems that the actual 
# URLs are internally in WD's RDF dump represented with a different (redirected?) namespace (http://commons.wikimedia.org/wiki/Special:FilePath/)
# We deomstrate this here just by an already "instantiated" SPARQL query, that uses the actual 'File' prefix: 


SELECT DISTINCT 
?subject ?wdt_property ?object
WHERE
{
  ?property wikibase:directClaim ?wdt_property.
  ?property p:P2302 ?statement.
  ?statement ps:P2302 wd:Q21510852. ## Commons link constraint
  ?statement pq:P2307 ?namespace_descriptor.
  
  ?subject ?wdt_property ?object.
  # THis constraint is not expressible in SPARQL directly, because one CANNOT determine the required namespace prefix by just concatenation:
  # THe following unfortunately does not work:
  #    FILTER(!STRSTARTS(STR(?object), CONCAT(CONCAT('https://commons.wikimedia.org/wiki/',?namespace_descriptor),':')))
  # because the *actual*, i.e. redirected namespace for e.g "https://commons.wikimedia.org/wiki/File:" prefixed images is 
  # ... 'http://commons.wikimedia.org/wiki/Special:FilePath/' ... so there seems to be an issue in the RDF mapping here?

  FILTER(!STRSTARTS(STR(?object), 'http://commons.wikimedia.org/wiki/Special:FilePath/'))
  
  # EXAMPLE (comment next line to query all violations for all properties of this type...)
  # ... however note the risk of timeout: we suggest to run these queries one by one for each property of this type
  FILTER (?wdt_property = wdt:P14)
}
